class e{cursorX=null;cursorY=null;elementName;namespace="http://www.w3.org/2000/svg";constructor(e="svg",t=this.namespace){this.element=document.createElementNS(t,e),this.#e(e),this.elementName=e,"svg"===this.elementName&&this.element.setAttribute("xmlns",t)}addTo(e){return e.appendChild(this.element),this}create(t){return this.child=new e(t),this.element.appendChild(this.child.element),this.child}createGradient(t,n="linear",i=45,r="objectBoundingBox"){if("svg"!==this.elementName)throw new Error("This function can only be called on the main SVG element.");const s=new e(`${n}Gradient`);s.set({id:t,gradientUnits:`${r}`,gradientTransform:`rotate(${i})`});return(document.querySelector("defs")?document.querySelector("defs"):this.create("defs").element).appendChild(s.element),s}delete(){this.element.remove()}get(e){return this.element.getAttributeNS(null,e)}set(e){for(let t in e)this.element.setAttributeNS(null,t,e[t]);return this}trackCursor(){if("svg"!==this.elementName)throw new Error("This function can only be called on the main SVG element.");let e=this.element.createSVGPoint();return this.element.addEventListener("pointermove",(t=>{this.element.style.touchAction="none",e.x=t.clientX,e.y=t.clientY,e=e.matrixTransform(this.element.getScreenCTM().inverse()),this.cursorX=Math.ceil(e.x),this.cursorY=Math.ceil(e.y)})),this.element.addEventListener("pointerleave",(()=>{this.element.style.touchAction="auto"})),this}#e(e){const t=Object.prototype.toString.call(this.element).toLowerCase();if(t!==`[object svg${e.toLowerCase()}element]`)throw new Error(`Invalid SVG element: ${t}`)}}var t={constrain:function(e,t,n){return Math.min(Math.max(e,t),n)}};export{e as SvJs,t as gen};
//# sourceMappingURL=svjs.min.js.map
